{
	"info": {
		"_postman_id": "4b52a85e-b963-48b6-8c37-c732e0d7eb2f",
		"name": "4_NGINX Controller Dev API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login Admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fad57bdf-0f52-47e9-b7ae-8abb3d5fdbf9",
						"exec": [
							"pm.test(\"Login status\", function(){",
							"    var status = pm.response.code;",
							"    if(status == 204){",
							"        console.log(\"Login was successful. Moving to next step.\");",
							"        postman.setNextRequest(\"Create_Dev_F1_V1_API_definition\");",
							"        return true;",
							"    }",
							"    else {",
							"        console.error(\"Login was not successful. Exiting!!!\");",
							"        postman.setNextRequest(null);",
							"        pm.expect.fail(\"Login was not successful. Exiting!!!\");",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"credentials\": {\n        \"type\": \"BASIC\",\n        \"username\": \"{{USERNAME}}\",\n        \"password\": \"{{PASSWORD}}\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{CTRL_HOST}}/api/v1/platform/login",
					"protocol": "https",
					"host": [
						"{{CTRL_HOST}}"
					],
					"path": [
						"api",
						"v1",
						"platform",
						"login"
					]
				},
				"description": "login to Controller as Dev for F1 API"
			},
			"response": []
		},
		{
			"name": "Create_Dev_F1_V1_API_definition",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "55a36caf-f11a-44c3-a912-7f5a1da7228b",
						"exec": [
							"console.log(\"NOTICE: Creating F1-results API definition\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3747e203-0e90-42eb-9c35-7d5d55e32138",
						"exec": [
							"pm.test(\"Check if F1-results API Definition got created\", function(){",
							"    var status = pm.response.code;",
							"    if(status == 200|| status == 201){",
							"        console.log(\"F1-results API definition created successfully.\");",
							"        postman.setNextRequest(\"Publish_Dev_F1_V1_API\");",
							"        return true;",
							"    }",
							"    else{",
							"        postman.setNextRequest(null);",
							"        pm.expect.fail(\"F1-results API definition creation failed.\");",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/yaml"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "---\ncomponents:\n  schemas:\n    Circuit:\n      properties:\n        Location:\n          properties:\n            country:\n              example: Australia\n              type: string\n            lat:\n              example: \"-37.8497\"\n              type: string\n            locality:\n              example: Melbourne\n              type: string\n            long:\n              example: '144.968'\n              type: string\n          type: object\n        circuitId:\n          example: albert_park\n          type: string\n        circuitName:\n          example: Albert Park Grand Prix Circuit\n          type: string\n        url:\n          example: http://en.wikipedia.org/wiki/Melbourne_Grand_Prix_Circuit\n          type: string\n      type: object\n    Driver:\n      properties:\n        code:\n          example: HAM\n          type: string\n        driverId:\n          example: hamilton\n          type: string\n        familyName:\n          example: Hamilton\n          type: string\n        givenName:\n          example: Lewis\n          type: string\n        permanentNumber:\n          example: '44'\n          type: string\n        url:\n          example: http://en.wikipedia.org/wiki/Lewis_Hamilton\n          type: string\n      required:\n      - driverId\n      - url\n      type: object\n    Drivers:\n      items:\n        \"$ref\": \"#/components/schemas/Driver\"\n      type: array\n    Error:\n      properties:\n        code:\n          format: int32\n          type: integer\n        message:\n          type: string\n      required:\n      - code\n      - message\n      type: object\n    MRData:\n      properties:\n        limit:\n          example: '30'\n          type: string\n        offset:\n          example: '0'\n          type: string\n        series:\n          example: f1\n          type: string\n        total:\n          example: '1'\n          type: string\n        xmlns:\n          example: http://ergast.com/mrd/1.0\n          type: string\n      type: object\n    Race:\n      properties:\n        Circuit:\n          \"$ref\": \"#/components/schemas/Circuit\"\n          type: object\n        date:\n          example: '2008-03-16'\n          type: string\n        raceName:\n          example: Australian Grand Prix\n          type: string\n        round:\n          example: '1'\n          type: string\n        season:\n          example: '2008'\n          type: string\n        time:\n          example: 04:30:00Z\n          type: string\n        url:\n          example: http://en.wikipedia.org/wiki/2008_Australian_Grand_Prix\n          type: string\n      type: object\n    ResultDriver:\n      properties:\n        MRData:\n          allOf:\n          - \"$ref\": \"#/components/schemas/MRData\"\n          - properties:\n              DriverTable:\n                properties:\n                  Drivers:\n                    items:\n                      \"$ref\": \"#/components/schemas/Driver\"\n                    type: array\n                  driverId:\n                    example: hamilton\n                    type: string\n            type: object\n      type: object\n    ResultDriverList:\n      properties:\n        MRData:\n          allOf:\n          - \"$ref\": \"#/components/schemas/MRData\"\n          - properties:\n              DriverTable:\n                properties:\n                  Drivers:\n                    items:\n                      \"$ref\": \"#/components/schemas/Driver\"\n                    type: array\n            type: object\n      type: object\n    ResultDriverSeasonList:\n      properties:\n        MRData:\n          allOf:\n          - \"$ref\": \"#/components/schemas/MRData\"\n          - properties:\n              SeasonTable:\n                properties:\n                  Seasons:\n                    items:\n                      \"$ref\": \"#/components/schemas/Seasons\"\n                    type: array\n                  driverId:\n                    example: hamilton\n                    type: string\n            type: object\n      type: object\n    ResultRace:\n      properties:\n        MRData:\n          allOf:\n          - \"$ref\": \"#/components/schemas/MRData\"\n          - properties:\n              RaceTable:\n                properties:\n                  Races:\n                    items:\n                      \"$ref\": \"#/components/schemas/Race\"\n                    type: array\n                  round:\n                    example: '1'\n                    type: string\n                  season:\n                    example: '2020'\n                    type: string\n                type: object\n            type: object\n      type: object\n    ResultRaceList:\n      properties:\n        MRData:\n          allOf:\n          - \"$ref\": \"#/components/schemas/MRData\"\n          - properties:\n              RaceTable:\n                properties:\n                  Races:\n                    items:\n                      \"$ref\": \"#/components/schemas/Race\"\n                    type: array\n                  season:\n                    example: '2020'\n                    type: string\n                type: object\n            type: object\n      type: object\n    ResultSeasonList:\n      properties:\n        MRData:\n          allOf:\n          - \"$ref\": \"#/components/schemas/MRData\"\n          - properties:\n              SeasonTable:\n                properties:\n                  Seasons:\n                    items:\n                      \"$ref\": \"#/components/schemas/Seasons\"\n                    type: array\n            type: object\n      type: object\n    Season:\n      properties:\n        season:\n          example: '2003'\n          type: string\n        url:\n          example: http://en.wikipedia.org/wiki/F1_2003\n          type: string\n      type: object\n    Seasons:\n      items:\n        \"$ref\": \"#/components/schemas/Season\"\n      type: array\ninfo:\n  license:\n    name: MIT\n  title: F1 Results API\n  version: '1'\nopenapi: 3.0.0\npaths:\n  \"/api/f1/drivers\":\n    get:\n      operationId: listDrivers\n      parameters:\n      - description: How many items to return at one time (max 100)\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ResultDriverList\"\n          description: A paged array of drivers\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n        default:\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n          description: unexpected error\n      summary: List all drivers\n      tags:\n      - drivers\n    post:\n      operationId: createDrivers\n      responses:\n        '201':\n          description: Null response\n        default:\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n          description: unexpected error\n      summary: Create a driver\n      tags:\n      - drivers\n  \"/api/f1/drivers/{driverId}\":\n    get:\n      operationId: showDriverById\n      parameters:\n      - description: The id of the driver to retrieve\n        in: path\n        name: driverId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ResultDriver\"\n          description: Expected response to a valid request\n        default:\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n          description: unexpected error\n      summary: Info for a specific driver\n      tags:\n      - drivers\n  \"/api/f1/drivers/{driverId}/seasons\":\n    get:\n      operationId: listDriverSeasons\n      parameters:\n      - description: The id of the driver to retrieve\n        in: path\n        name: driverId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ResultDriverSeasonList\"\n          description: Expected response to a valid request\n        default:\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n          description: unexpected error\n      summary: A paged array of seasons where driver raced\n      tags:\n      - drivers\n  \"/api/f1/seasons\":\n    get:\n      operationId: listSeasons\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ResultSeasonList\"\n          description: Expected response to a valid request\n        default:\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n          description: unexpected error\n      summary: A paged array of seasons\n      tags:\n      - seasons\n  \"/api/f1/seasons/{seasonYear}\":\n    get:\n      operationId: listRaces\n      parameters:\n      - description: The year of the season to retrieve\n        in: path\n        name: seasonYear\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ResultRaceList\"\n          description: Expected response to a valid request\n        default:\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n          description: unexpected error\n      summary: A paged array of races in a season\n      tags:\n      - seasons\n  \"/api/f1/current/{raceNumber}\":\n    get:\n      operationId: getRace\n      parameters:\n      - description: The race in the current season to retrieve\n        in: path\n        name: raceNumber\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ResultRace\"\n          description: Expected response to a valid request\n        default:\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n          description: unexpected error\n      summary: Get details of a specific race in season/race number\n      tags:\n      - seasons\nservers:\n- description: SwaggerHub API Auto Mocking\n  url: https://virtserver.swaggerhub.com/sports/liam-f1/1\n- url: http://ergast.com/api/f1\n",
					"options": {
						"raw": {
							"language": "text"
						}
					}
				},
				"url": {
					"raw": "https://{{CTRL_HOST}}/api/v1/services/api-definitions/dev-f1-results/versions/v1/import",
					"protocol": "https",
					"host": [
						"{{CTRL_HOST}}"
					],
					"path": [
						"api",
						"v1",
						"services",
						"api-definitions",
						"dev-f1-results",
						"versions",
						"v1",
						"import"
					]
				}
			},
			"response": []
		},
		{
			"name": "Publish_Dev_F1_V1_API",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6eef10e1-261d-4976-91d9-a6d6029e76e6",
						"exec": [
							"console.log(\"NOTICE: Publishing Dev-F1-results API\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "bbf1c18d-628d-492b-814f-7d6e14f1c3e2",
						"exec": [
							"pm.test(\"Check if Dev F1-results API got published\", function(){",
							"    var status = pm.response.code;",
							"    if(status == 200 || status == 201 || status == 202){",
							"        console.log(\"Dev F1-results API published successfully.\");",
							"        postman.setNextRequest(\"Create_Dev_F1_V1_Component\");",
							"        return true;",
							"    }",
							"    else{",
							"        postman.setNextRequest(null);",
							"        pm.expect.fail(\"Dev-F1-results API publishing failed.\");",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"metadata\": {\n    \"name\": \"f1-v1-dev\",\n    \"displayName\": \"F1 Sports Dev\",\n    \"tags\": []\n  },\n  \"desiredState\": {\n    \"apiDefinitionVersionRef\": {\n      \"ref\": \"/services/api-definitions/dev-f1-results/versions/v1\"\n    },\n    \"gatewayRefs\": [\n      {\n        \"ref\": \"/services/environments/dev-f1/gateways/devapigw\"\n      }\n    ]\n  }\n}\n\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{CTRL_HOST}}/api/v1/services/environments/dev-f1/apps/devsportsresults/published-apis/f1-v1-dev",
					"protocol": "https",
					"host": [
						"{{CTRL_HOST}}"
					],
					"path": [
						"api",
						"v1",
						"services",
						"environments",
						"dev-f1",
						"apps",
						"devsportsresults",
						"published-apis",
						"f1-v1-dev"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create_Dev_F1_V1_Component",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4f846a5d-bf13-4a7d-bfe4-a6efa650319a",
						"exec": [
							"console.log(\"NOTICE: Creating F1 V1 Component\");",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b0efc066-7051-4065-b211-36f8c6285e95",
						"exec": [
							"pm.test(\"Check if Dev F1 V1 component got created\", function(){",
							"    var status = pm.response.code;",
							"    if(status == 200 || status == 201 || status == 202){",
							"        console.log(\"Dev F1 V1 component created successfully.\");",
							"        postman.setNextRequest(null);",
							"        return true;",
							"    }",
							"    else{",
							"        postman.setNextRequest(null);",
							"        pm.expect.fail(\"Dev F1 V1 component creation failed.\");",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"metadata\": {\n        \"createTime\": \"2020-09-23T22:28:45Z\",\n        \"displayName\": \"Dev F1 Sports API Component\",\n        \"kind\": \"components\",\n        \"links\": {\n            \"rel\": \"/api/v1/services/environments/dev-f1/apps/devsportsresults/components/devf1sportsapi\"\n        },\n        \"name\": \"devf1sportsapi\",\n        \"uid\": \"8bee5fa8-ad53-4ae1-9a8f-817ea981567c\",\n        \"updateTime\": \"2020-09-23T22:28:49Z\"\n    },\n    \"desiredState\": {\n        \"backend\": {\n            \"ntlmAuthentication\": \"DISABLED\",\n            \"preserveHostHeader\": \"DISABLED\",\n            \"workloadGroups\": {\n                \"ergastdev\": {\n                    \"loadBalancingMethod\": {\n                        \"type\": \"ROUND_ROBIN\"\n                    },\n                    \"uris\": {\n                        \"http://10.1.1.8:8001\": {\n                            \"weight\": 50,\n                            \"isBackup\": false,\n                            \"isDown\": false,\n                            \"isDrain\": false\n                        },\n                        \"http://10.1.1.8:8002\": {\n                            \"weight\": 50,\n                            \"isBackup\": false,\n                            \"isDown\": false,\n                            \"isDrain\": false\n                        }\n                    }\n                }\n            }\n        },\n        \"errorSetRef\": {\n            \"links\": {\n                \"rel\": \"/api/v1/services/errorsets/default-json\",\n                \"displayName\": \"Default JSON ErrorSet\",\n                \"name\": \"default-json\"\n            },\n            \"ref\": \"/services/errorsets/default-json\"\n        },\n        \"ingress\": {\n            \"uris\": {\n                \"/api/f1/drivers\": {\n                    \"matchMethod\": \"EXACT\"\n                },\n                \"/api/f1/seasons\": {\n                    \"matchMethod\": \"EXACT\"\n                }\n            },\n            \"gatewayRefs\": [\n                {\n                    \"ref\": \"/services/environments/dev-f1/gateways/devapigw\"\n                }\n            ]\n        },\n        \"logging\": {\n            \"accessLog\": {\n                \"state\": \"DISABLED\"\n            },\n            \"errorLog\": \"DISABLED\"\n        },\n        \"publishedApiRefs\": [\n            {\n                \"ref\": \"/services/environments/dev-f1/apps/devsportsresults/published-apis/f1-v1-dev\"\n            }\n        ],\n        \"security\": {}\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{CTRL_HOST}}/api/v1/services/environments/dev-f1/apps/devsportsresults/components/devf1sportsapi",
					"protocol": "https",
					"host": [
						"{{CTRL_HOST}}"
					],
					"path": [
						"api",
						"v1",
						"services",
						"environments",
						"dev-f1",
						"apps",
						"devsportsresults",
						"components",
						"devf1sportsapi"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}